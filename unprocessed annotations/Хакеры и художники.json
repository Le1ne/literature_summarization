{
    "title": "Хакеры и художники",
    "author": "Грэм",
    "annotation": "книги\nДля этого пересказа надо написать \nмикропересказ\n в 190—200 знаков.\nСодержание\n\n\n\n\n1\n \nНравственные нормы и мода недолговечны, и «ботаники» не считаются с ними\n\n\n2\n \nКомпьютерные хакеры похожи на художников\n\n\n3\n \nТалантливые хакеры — прирожденные бунтари\n\n\n4\n \nЗапуск стартапа — быстрый способ разбогатеть\n\n\n5\n \nМнение конечного пользователя — решающее для успешности продукта и компании\n\n\n6\n \nЯзыки программирования различаются по своей цели, и постоянно совершенствуются\n\n\n7\n \nХороший язык программирования разработан со вкусом и отвечает потребностями хакера\n\n\n8\n \nМалоизвестные языки иногда могут иметь свои преимущества\n\n\n9\n \nВы можете избавиться от спама\n\n\n10\n \nСамое главное\n\n\n\n\n\n\n\n\n\n\nНравственные нормы и мода недолговечны, и «ботаники» не считаются с ними\n[\nред.\n]\n\n\nЧто объединяет моду и нравственные нормы? На первый взгляд, ничего. Но на самом деле оба явления ограничены временем и местоположением.\n\nПример. Посмотрите фотографии 1990-х годов — насколько изменилась мода! Или, поехав в Японию, вы можете удивиться тому, как одевается современная молодёжь.\n\n\nНравственная мода, то есть поведенческие нормы, также зависят от времени и места.\n\nПример. Разница в нравственных ориентирах немцев времён Второй мировой войны и граждан современной Германии.\n\n\nМода на одежду и мораль постоянно меняется. Но «ботаники» — люди, не развитые социально, они не пытаются быть как все. «Ботаники» тратят своё время и энергию на получение знаний, не утруждая себя следованием модным тенденциям.\n\nПример. Наверняка, кто-то из ваших знакомых носит одну куртку каждый день в течение пяти лет.\n\n\n«Ботаники» непопулярны, особенно в школе. Чтобы стать королем или королевой бала на выпускном, обычно нужно следовать тенденциям моды и морали. Но после школы, в реальном мире (где не так важно быть модным), «ботаникам» везёт больше, чем остальным.\n\n\n\nКомпьютерные хакеры похожи на художников\n[\nред.\n]\n\n\nУслышав слово «хакер», большинство представляют себе холодного, расчётливого человека, который незаконно вторгается в чужие компьютеры и занимается скучной, аналитической работой. А теперь подумайте о художнике. Представляется образ вдохновленного гения, изливающего душу на холсте.\n\nТакое восприятие ошибочно. В компьютерном мире термин «хакер» относится к выдающимся программистам, которые могут сделать почти всё, и не обязательно преступное. Более того, компьютерные атаки требуют скорее творческого ума, чем математического.\n\nХакеры и художники похожи: они решают проблемы с помощью созидания.\n\nПример. Автора книги учили разрабатывать компьютерный код на бумаге, доводить до совершенства и только потом переносить в компьютер. Но творческий подход оказался эффективнее: он стал писать код в программе и решать проблемы по мере их возникновения, так же, как художник сначала делает наброски и отталкивается от них, а не дотошно планирует всю картину заранее.\n\n\nХакеры, как и художники, создают абстрактную ценность, которую трудно измерить. Единственный способ её оценить — узнать, насколько она нравится людям. Программное обеспечение должно удовлетворять потребности пользователя, а искусство — радовать публику.\n\nАвтор обнаружил эти сходства, когда начал учиться в художественной школе, уже получив образование в области компьютерных наук. Он заметил, что оба направления преследуют одну цель: создавать великие творения.\n\n\n\nТалантливые хакеры — прирожденные бунтари\n[\nред.\n]\n\n\nКажется, что для программирования необходимо жёстко придерживаться установленных правил, иначе возникнет множество ошибок, верно? Но быть хакером часто означает нарушать правила. Как и любой профессии, этому делу можно научиться, лишь глядя на работу предшественников. Если вы хотите по-настоящему разобраться в теме, придётся нарушать законы: работа, интересующая вас, может быть защищена правами на интеллектуальную собственность.\n\nХакеры интеллектуальны и любопытны, их интересуют современные технологии, например, передовое программное обеспечение. Для освоения этих областей может понадобиться взломать чужой компьютер. Подобные попытки незаконны, но хакеры часто совершают преступления из любопытства, а не ради наживы. Когда взлом компьютера впервые был классифицирован как преступление, Федеральному бюро расследований (ФБР) было сложно раскрывать такие дела, поскольку мотивом была простая любознательность.\n\nХакерам надо соблюдать законы, чтобы избежать проблем. Но мятежный дух, которому они обязаны своим талантом, не позволяет делать это. Они ставят под сомнение власть и укоренившиеся идеи. Ведь это единственный способ выработать инновационные решения для хорошего программирования.\n\nБольшинство хакеров — «ботаники», которых не заботят социальные нормы, поэтому они оспаривают и совершенствуют всё возможное.\n\n\n\nЗапуск стартапа — быстрый способ разбогатеть\n[\nред.\n]\n\n\nМногие мечтают открыть компанию на основе собственной великой идеи. И если вы хороший программист, незамедлительно сделайте это.\n\nЗапуск стартапа — один из способов быстро разбогатеть. Ваша зарплата сотрудника крупной корпорации существенно не увеличится — неважно, насколько усердно вы трудитесь. Основав же стартап, вам придётся тяжело работать, но каждый час работы будет приближать компанию к успеху.\n\nПример. Автор книги с двумя друзьями много работал над созданием приложения онлайн-шопинга Viaweb и в итоге продал его за миллионы долларов.\n\n\nНекоторые считают, что концентрации богатства в руках избранных — ошибка. Но на самом деле это идёт на благо каждому. Богатство — это не деньги, а вещи, которые хотят люди, деньги — лишь платёжное средство. Богатство может быть создано кем угодно, без ущерба для других.\n\nПример. Если у вас есть ретро-автомобиль и вы полируете его в свободное время, то вы создаёте новое богатство, не лишая его другого человека. Богатство не ограничено, поэтому богатые не могут «прибрать его к рукам».\n\n\nМожно ли отрицать, что самые богатые люди (руководители компаний, профессиональные спортсмены и т. д.) работали усерднее и продуктивнее остальных и поэтому заслуживают богатства?\n\nПример. Если, открывая стартап, вам приходится работать в десять раз больше, чем офисному работнику, разве не справедливо, что вы заработаете в десять раз больше? Особенно, если создадите продукт, который пригодится каждому.\n\n\n\n\nМнение конечного пользователя — решающее для успешности продукта и компании\n[\nред.\n]\n\n\nХудожники должны радовать публику, а хакеры — угождать пользователю. При разработке продукта конечный пользователь должен занимать центральное место.\n\nКак можно скорее создайте и выпустите прототип продукта, чтобы собрать отзывы от реальных потребителей. Такая стратегия называется «Чем хуже, тем лучше». Выпуск даже урезанного варианта даёт ценную обратную связь, которая позволяет исправить ошибки и усовершенствовать продукт. Этот подход успешно использовала писательница Джейн Остин: прежде, чем закончить книгу, она читала её вслух своей семье, члены которой предлагали свои варианты концовки. Они были первыми пользователями её «прототипа».\n\nПродукт, который не отвечает потребностям пользователей, не привлечёт их внимания, независимо от своих функций.\n\nПример. Купит ли кто-то вашу мебель, если она будет красивой, но чудовищно некомфортной? Вряд ли.\n\n\nЧтобы привлечь потребителей, удовлетворяйте их потребности. Это замкнутый круг: покупатели приносят вам доход, который нужно вкладывать в совершенствование продукта и маркетинг.\n\nЕсли же вы захотите продать компанию, она будет оцениваться по количеству потребителей. Приложение, которое приобрели 100 000 пользователей, заинтересует потенциальных покупателей больше, чем приложение с 300 поклонниками.\n\n\n\nЯзыки программирования различаются по своей цели, и постоянно совершенствуются\n[\nред.\n]\n\n\nC++, Python, Java… Вы, наверное, слышали, как программисты перечисляют языки программирования, с помощью которых дают компьютерам команды. Но компьютеры понимают только машинный язык, то есть комбинацию нулей и единиц, сообщающую, какие действия необходимо выполнять. Поэтому программистам нужен компилятор для перевода языка программирования на машинный.\n\nЗачем же столько языков программирования? Разные языки программирования подходят для различных задач. Даже людям иногда проще выразить определённые вещи на одном языке, чем на другом.\n\nПример. Чтобы попросить компьютер добавить переменную Y к X, нужно создать код в две строки на языке Lisp, в то время как на языке Perl понадобится четыре строки.\n\n\nИногда в выбранном языке нет необходимых понятий для программы, и приходится либо менять его, либо решать проблему на текущем языке.\n\nПример. Язык Python не признаёт полностью переменные X и Y. Если вы хотите добавить Y к X, то придётся найти обходной путь, создав аж шесть строк кода.\n\n\nПостоянно появляются новые языки, а существующие совершенствуются. Языки разрабатывают программисты, адаптируя их в соответствии со своими предпочтениями и требованиями. До 1980-х это было невозможно, поскольку языки создавались только учреждениями и крупными компаниями. Но теперь каждому доступны технологии для адаптации существующих языков или создания новых.\n\n\n\nХороший язык программирования разработан со вкусом и отвечает потребностями хакера\n[\nред.\n]\n\n\nЕсли бы вы оценивали 1000 картин, то ваше суждение основывалось бы на вашем вкусе. То же верно и для хакеров, выбирающих между хорошим и плохим языком программирования. Они ценят хороший вкус в языках.\n\nПример. Если вы разработали свой язык программирования и, спустя время, опубликуете новую версию, она будет лучше предыдущей. Ведь у вас появятся новые навыки, и вкус улучшится за эти годы.\n\n\nХороший язык программирования отвечает потребностям хакера. Если язык слишком сложен или ограничен, программисты будут выбирать другой. Но если он удовлетворяет их потребностям, язык станет популярным и будет совершенствоваться. Хорошие языки становятся всё лучше, так как хакеры постоянно исправляют в них ошибки.\n\nПример. Языки Perl и Python были разработаны одним программистом, но позже стали доступны общественности, чтобы любой мог изменять и совершенствовать их.\n\n\n\n\nМалоизвестные языки иногда могут иметь свои преимущества\n[\nред.\n]\n\n\nОткрывая бизнес на основе программирования, вы, не являясь программистом, вероятно, понятия не имеете, какой язык должна использовать компания.\n\nКомпании предпочитают популярные языки по следующим причинам:\n\n\n\nПрограмма будет совместима со многими другими, написанными на том же языке.\n\n\nПроще найти программистов, работающих с популярными языками. Сотрудник, пишущий программы на редком языке (например, Lisp), может уйти, и тогда возникнут проблемы. Если вы не найдёте замену, придётся отказаться от проекта.\n\n\nНо не стоит забывать, что злоумышленников, владеющих популярными языками, также всегда будет больше.\n\nУ популярных языков программирования существуют и недостатки:\n\n\n\nНекоторые языки оптимизированы для определённых задач, что вынуждает разработчиков использовать популярный язык для любого проекта, а так вы вряд ли получите максимум от своего продукта.\n\n\nСкорее всего, ваши конкуренты сталкиваются с той же проблемой. Выбрав редкий язык, вы приобретёте преимущество. Конкуренты не смогут анализировать вашу деятельность, если ваша продукция основана на другой технической платформе.\n\n\nПример. Это и сделал автор, создав Viaweb на малоизвестном языке Lisp, получив техническое преимущество и оставив своих конкурентов в недоумении.\n\n\n\n\nВы можете избавиться от спама\n[\nред.\n]\n\n\nХорошему хакеру подвластно буквально всё, даже проблема, с которой мы хорошо знакомы: спам — нескончаемый поток рекламных объявлений, захламляющий наш почтовый ящик. Существует несколько методов борьбы со спамом:\n\n1. Можно определить индивидуальные свойства спам-писем.\n\nПример. Многие спам-сообщения начинаются с чего-то вроде «Дорогой друг!». Можно написать код, который автоматически будет помещать все сообщения с этой фразой в папку «спам».\n\n\n2. Можно использовать статистическую фильтрацию: каждое слово в сообщении будет анализироваться, и компьютер вычислит вероятность того, является ли сообщение спамом. Возможные нарушители будут отправляться в папку «спам».\n\n3. Лучший вариант — персонализировать статистический подход, сохраняя некоторые сообщения, даже если статистика показывает, что это спам.\n\nПример. Автор указал, что сообщения со словом «Lisp», должны помечаться как «не-спам». Он также установил, что сообщения адрестов, с которыми он вёл переписку, считаются безопасными.\n\n\nХакер также должен учитывать последствия своих действий. В данном случае, вы рискуете пропустить важные письма, ведь спам-фильтры не обладают 100 % точностью. Периодически придётся проверять папку «спам». Но впоследствии вы сможете улучшить спам-фильтр, чтобы он больше не совершал подобных ошибок.\n\nСпам сильно раздражает, но попытка отфильтровать его может вызвать определённые проблемы.\n\n\n\nСамое главное\n[\nред.\n]\n\n\nКомпьютерное программирование — это творческий процесс, а бунтарский дух программистов-«ботаников» позволяет им создавать вдохновляющие, инновационные решения. Основывая стартап на выдающейся идее, программист может разбогатеть.\n\nЕсли вы программист и у вас родилась идея для бизнеса — не упускайте шанс. Тяжело разбогатеть, будучи штатным программистом в крупной корпорации, поскольку успех компании слабо влияет на зарплату сотрудников. Если у вас есть бизнес-идея, реализуйте её.\n\nНад своим бизнесом придётся работать гораздо усерднее, чем в офисе. Но вы сможете сами решать, что делать, создавая новые интересные продукты, которые принесут пользу потребителям. Каждый час работы будет увеличивать шанс однажды продать компанию за миллионы долларов.\n\n\n\n\n\nПересказала Марина Кочетова.",
    "categories": [
        "Грэм, Пол",
        "Все пересказы по алфавиту",
        "Самое главное",
        "Не указан жанр",
        "Нет микропересказа"
    ],
    "source_file": "3a6b5bbb7b9dcceaa5228577b5ffa0c166917155ba119c44a13a26aa9075fafc.raw"
}